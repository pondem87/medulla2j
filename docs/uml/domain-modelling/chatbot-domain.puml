@startuml
title chatbot domain

'=== Entities ===
class Client {
    -PhoneNumber phoneNumber
    -Instant timeCreated
    -Boolean promotionsOptIn
}

class Conversation {
    -Client client
    -Instant timeCreated
    -Instant timeLastUpdated
}

class Message {
    -Conversation conversation
    -String messageContent
    -Instant timeCreate
    -MessageDirection direction
}

class ClientPreferences {
    -Client client
    -UUID modelId
    -ImageQuality imageQuality
}

class DailyActivity {
    -Client client
    -Integer totalMessagesSent
    -Integer totalMessagesReceived
    -Date date
}

note right of DailyActivity::date
one date per client
per day only
end note

'=== VALUE OBJECTS ===
class PhoneNumber {
    -String value
    -Boolean validate(String phoneNumber)
    {static}+PhoneNumber create(String phoneNumber)
}

class MessageDirection {
    -Direction value
    -Direction validate(String direction)
    +MessageDirection create(String direction)
}

enum Direction {
    INCOMING
    OUTGOING
}

'=== SERVICES ===
class ChatbotService {
    +getConversation(UUID clientId)
}

note right of ChatbotService::getConversation
Retrieves a Conversation or
creates one if none exists
or the current one has expired
end note

'=== ASSOCIATIONS ===
Client "1" -- "..*" Conversation: as client
Client "1" -- "1" ClientPreferences: as client
Conversation "1" -- "..*" Message: as conversation
Client "1" --- "..*" DailyActivity: as client

'=== EXTERNAL REFERENCES ===

class LLM {
    <<external>>
    +UUID id
}

ClientPreferences ..> LLM : referenced by modelId

@enduml